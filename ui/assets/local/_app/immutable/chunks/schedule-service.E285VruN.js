import"./i18next.dQ3wfJvm.js";import{s as d}from"./parse-with-big-int.e3oI4SEy.js";import{r as a,a as r}from"./route-for-api.rPK9t_O_.js";import{v as h}from"./toaster.ES5mncZo.js";const S=async(t,e=fetch)=>(o=100,s="")=>{const n=a("schedules",{namespace:t});return r(n,{params:{maximumPageSize:String(o),nextPageToken:s},request:e}).then(({schedules:u,nextPageToken:c})=>({items:u,nextPageToken:c?String(c):""}))};async function g(t,e=fetch){const o=a("schedule",t);return r(o,{request:e})}async function b(t,e=fetch){const o=a("schedule",t);return r(o,{request:e,options:{method:"DELETE"}})}async function T({namespace:t,scheduleId:e,body:o}){let s="";const n=i=>{var p;return s=((p=i==null?void 0:i.body)==null?void 0:p.message)??`Error creating schedule: ${i.status}: ${i.statusText}`},u=a("schedule",{namespace:t,scheduleId:e}),{conflictToken:c}=await r(u,{options:{method:"POST",body:d({request_id:h(),...o})},onError:n});return{conflictToken:c,error:s}}async function P({namespace:t,scheduleId:e,body:o}){let s="";const n=c=>{var i;return s=((i=c==null?void 0:c.body)==null?void 0:i.message)??`Error editing schedule: ${c.status}: ${c.statusText}`},u=a("schedule.edit",{namespace:t,scheduleId:e});return await r(u,{options:{method:"POST",body:d({request_id:h(),...o})},onError:n}),{error:s}}async function q({namespace:t,scheduleId:e,reason:o}){const s={patch:{pause:o}},n=a("schedule.patch",{namespace:t,scheduleId:e});return await r(n,{options:{method:"POST",body:d({...s,request_id:h()})},onError:u=>console.error(u)})}async function E({namespace:t,scheduleId:e,reason:o}){const s={patch:{unpause:o}},n=a("schedule.patch",{namespace:t,scheduleId:e});return await r(n,{options:{method:"POST",body:d({...s,request_id:h()})}})}async function w({namespace:t,scheduleId:e,overlapPolicy:o}){const s={patch:{triggerImmediately:{overlapPolicy:o}}},n=a("schedule.patch",{namespace:t,scheduleId:e});return await r(n,{options:{method:"POST",body:d({...s,request_id:h()})}})}async function O({namespace:t,scheduleId:e,overlapPolicy:o,startTime:s,endTime:n}){const u={patch:{backfillRequest:[{overlapPolicy:o,startTime:s,endTime:n}]}},c=a("schedule.patch",{namespace:t,scheduleId:e});return await r(c,{options:{method:"POST",body:d({...u,request_id:h()})}})}export{S as a,O as b,T as c,b as d,P as e,g as f,q as p,w as t,E as u};
