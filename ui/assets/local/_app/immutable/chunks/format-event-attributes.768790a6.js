import{W as h}from"./index.c37b9eda.js";import{t as p}from"./translate.bba0e664.js";import{t as E}from"./time-format.48c703bd.js";import{c}from"./format-camel-case.887ffc78.js";import{f as x}from"./format-date.b0aa3a95.js";import{i as T}from"./index.12ac8713.js";import{h as f}from"./has.b58a7bba.js";import{i as m}from"./is.b521dabf.js";import{C as I}from"./is-event-type.3574dcf0.js";const b={key:"",value:""},S=new Set(["activityId","attempt","binaryChecksum","identity","parentInitiatedEventId","requestId","scheduledEventId","startedEventId","lastHeartbeatTime","scheduledTime","expirationTime"]),Z=t=>S.has(t),g=new Set(["suggestContinueAsNew","historySizeBytes"]),y=(t,e)=>!(e===null||e===void 0||e===""||e==="0s"||t==="type"||(!e||e==="0")&&g.has(t)),j=t=>!(t===null||t===void 0||t===""||Array.isArray(t)&&!t.length),v=t=>typeof t=="string"?t:[t==null?void 0:t.payloads,t==null?void 0:t.indexedFields,t==null?void 0:t.points,t].find(e=>e!==void 0),D=t=>{if(m(t)){if(f(t,"stackTrace")&&t.stackTrace)return t.stackTrace;for(const e in t)if(m(t[e]))return D(t[e])}},O=["baseRunId","continuedExecutionRunId","firstExecutionRunId","newExecutionRunId","newRunId","originalExecutionRunId"],tt=t=>{for(const e of O)if(t===e)return!0;return!1},R=["taskQueueName"],et=t=>{for(const e of R)if(t===e)return!0;return!1},A=["workflowExecutionWorkflowId","workflowExecutionRunId"],rt=(t,e)=>{const r=Boolean((e==null?void 0:e.workflowExecutionWorkflowId)&&(e==null?void 0:e.workflowExecutionRunId));for(const o of A)if(t===o&&r)return!0;return!1},u=(t,e)=>{if(typeof e=="object"){const[r]=Object.keys(e);return{key:t+c(r),value:e[r]}}else return{key:t,value:e.toString()}},L=["failure","input","activityType","parentInitiatedEventId","workflowExecution","workflowType","taskQueue"],G=({attributes:t})=>{for(const[e,r]of Object.entries(t))if(y(e,r))return u(e,r)},N=t=>{if(f(t,"ActivityType"))return t.ActivityType;if(f(t,"activity_type"))return t.activity_type},d=t=>{var r,o,s,i;const e=G(t);if(I(t)){const n=(i=(s=(o=(r=t.markerRecordedEventAttributes)==null?void 0:r.details)==null?void 0:o.data)==null?void 0:s.payloads)==null?void 0:i[0],a=N(n);if(a)return u("ActivityType",a)}for(const[n,a]of Object.entries(t.attributes))for(const w of L)if(n===w&&y(n,a))return u(n,a);return e},Q=({lastEvent:t})=>d(t),ot=t=>t?T(t)?Q(t):d(t):b,W=new Set(["header"]),F=new Set(["taskQueue","retryPolicy","parentWorkflowExecution","workflowExecution","meta"]),K=new Set(["maximumAttempts"]),l=p("workflows","unlimited"),C=p("workflows","no-expiration"),st=(t,e)=>t===0?C:e,it=(t,e)=>t?t-e:l,nt=t=>t||l,P=(t,e)=>t==="maximumAttempts"&&!e?l:e,V=(t,e)=>{if(F.has(e)&&typeof t[e]=="object"){for(const[r,o]of Object.entries(t[e]))j(o)&&(K.has(r)?t[`${e}${c(r)}`]=P(r,o):t[`${e}${c(r)}`]=o);delete t[e]}},at=(t,{compact:e}={compact:!1})=>{const r={};e&&(r.eventTime=x(t.eventTime,h(E)));for(const[o,s]of Object.entries(t.attributes)){const i=y(o,s);!W.has(o)&&i&&(r[o]=s),V(r,o)}return r},k=["summary","parent","activity","taskQueue","schedule","retryPolicy","workflow","searchAttributes"],ct={activity:{label:"attribute-group-activity"},parent:{label:"attribute-group-parent"},retryPolicy:{label:"attribute-group-retry-policy"},schedule:{label:"attribute-group-schedule"},searchAttributes:{label:"attribute-group-search-attributes"},summary:{label:"attribute-group-summary"},taskQueue:{label:"attribute-group-task-queue"},workflow:{label:"attribute-group-workflow"}},_=(t,e)=>{var r,o;t.category==="activity"&&((r=e==null?void 0:e.activity)!=null&&r.length)&&(e.summary=[...e.activity,...e.summary],e.activity=[]),t.category==="activity"&&((o=e==null?void 0:e.workflow)!=null&&o.length)&&(e.summary=[...e.summary,...e.workflow],e.workflow=[])},$=t=>{const e=new Set(["summary","searchAttributes"]);for(const[r,o]of Object.entries(t))o.length===1&&!e.has(r)&&(t.summary=[...t.summary,...o],t[r]=[])},ft=(t,e)=>{const r={};k.forEach(o=>{o==="summary"?r[o]=Object.keys(e):r[o]=[]});for(const o in e){const s=k.find(i=>o.includes(i));s&&(r[s]=[o,...r[s]],r.summary=r.summary.filter(i=>i!==o))}return _(t,r),$(r),r};export{rt as a,et as b,Z as c,D as d,ct as e,at as f,v as g,ft as h,ot as i,st as j,it as k,nt as l,tt as s};
